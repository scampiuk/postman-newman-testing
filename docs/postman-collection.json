{
	"info": {
		"_postman_id": "136eeca9-9b46-4dd6-9864-ae5d1579203f",
		"name": "postman-newman-testing",
		"description": "This is the collection of endpoints and tests for our `postman-newman-testing` API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "76fab18a-5e2c-4990-baee-4887d50ff178",
						"exec": [
							"pm.test('status to be 200', function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('should be a json response', () => {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test('response body to have field `message`', () => {",
							"    pm.expect(pm.response.json()).to.have.all.keys('message', 'requestId');",
							"});",
							"",
							"pm.test('response to be fast', () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000); // under 2 seconds",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8081/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						""
					]
				},
				"description": "Test the `GET /` endpoint"
			},
			"response": []
		},
		{
			"name": "/foo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a6e08b2b-fbd9-4996-acd7-950929c56800",
						"exec": [
							"pm.test('status to be 200', function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('should be a json response', () => {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test('response body to have field `message`', () => {",
							"    pm.expect(pm.response.json()).to.have.all.keys('bar', 'requestId');",
							"});",
							"",
							"pm.test('response to be fast', () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000); // under 2 seconds",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8081/foo?bar=toastsd",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"foo"
					],
					"query": [
						{
							"key": "bar",
							"value": "toastsd"
						}
					]
				},
				"description": "GET /foo"
			},
			"response": []
		},
		{
			"name": "/foo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d21706ed-3b6b-4f41-b9f3-cdecb563d9ff",
						"exec": [
							"pm.test('status to be 200', function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('should be a json response', () => {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test('response body to have field `message`', () => {",
							"    pm.expect(pm.response.json()).to.have.all.keys('bar', 'requestId');",
							"});",
							"",
							"pm.test('response to be fast', () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000); // under 2 seconds",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"bar\": \"beans\"\n}"
				},
				"url": {
					"raw": "http://localhost:8081/foo",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"foo"
					]
				},
				"description": "POST /foo request"
			},
			"response": []
		}
	]
}